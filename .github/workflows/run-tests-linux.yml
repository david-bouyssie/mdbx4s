# This is a basic workflow to help you get started with Actions

name: Run tests on Linux

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'     
        required: false
        default: "false"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        java: [ '8' ]

    env:
      JAVA_OPTS: -Xms2G -Xmx4G -XX:+UseG1GC

    name: Test using Java ${{ matrix.java }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    
      - name: Create .hawtjni folder (required for MDBX JNI)
        run: mkdir -p /home/runner/.hawtjni/mdbxjni/ && chmod -R 777 /home/runner/.hawtjni/
        
      - name: Inspect /home/runner/.hawtjni/mdbxjni/ permissions
        run: ls -al /home/runner/.hawtjni/

      - name: Setup Java
        uses: actions/setup-java@v3.0.0
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java }}
          
      # Clone repo of the libmdbx C library 
      - name: Clone libmdbx
        uses: actions/checkout@v3
        with:
          # Repository name with owner. For example, actions/checkout
          # Default: ${{ github.repository }}
          repository: 'erthink/libmdbx'
          fetch-depth: 0 # required to build from tags (https://erthink.github.io/libmdbx/usage.html#autotoc_md33)

      # Build libmdbx
      - name: Build libmdbx
        run: make all
        shell: bash

      # Install libmdbx
      - name: Install libmdbx
        run: sudo make install && sudo chmod 777 /usr/local/lib/libmdbx.so && ls -al /usr/local/lib/libmdbx.so
        shell: bash
        
      # Add current dir to LD_LIBRARY_PATH
      - name: Update LD_LIBRARY_PATH
        run: export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$PWD
        shell: bash

      # Upload libmdbx to workflow artifacts
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: libmdbx-linux-gnu-x86_64
          path: libmdbx.so
          
      # Checks-out the current repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v3
      
      # Enable tmate debugging of manually-triggered workflows if the input option was provided
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled == 'true' }}
      
      # Run tests
      - name: Run tests with SBT
        run: sbt 'set javaOptions in Test +="-Djava.io.tmpdir=/home/runner/.hawtjni/mdbxjni/"; +test'
